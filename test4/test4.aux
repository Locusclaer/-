\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}实验要求}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}学习代码的调试与性能分析}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}简单学习元编程}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}学习修改键位映射、VPN等大杂烩内容}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4}学习Pytorch的入门与应用}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {2}实验内容}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}学习代码的调试与性能分析}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}代码调试与性能分析是软件开发中非常重要的两个方面，它们各自针对的问题和目的不同。}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}代码调试是在软件开发过程中识别和修正代码中错误的行为。调试的目的是确保程序能够按照预期工作。调试过程通常包括以下几个步骤：//1.错误重现：确定错误发生的条件和步骤，使得问题可以被稳定重现。//2.错误定位：通过阅读代码、设置断点、观察变量状态等方法找到错误的根源。//3.错误修正：修改代码中的错误，然后重新测试以验证问题是否已经被解决。//4.测试验证：确保修正错误的同时没有引入新的问题。}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.3}调试工具和方法包括：//1.打印语句：在代码中插入打印语句来输出变量值和程序状态。//2.集成调试器：大多数集成开发环境（IDE）都包含调试器，可以设置断点、单步执行、查看变量值等。//3.日志记录：通过日志记录程序的运行情况，帮助开发者了解程序的执行流程和状态。}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.4}性能分析是指对软件程序运行时的性能进行测量和评估，目的是发现并解决性能瓶颈，提高程序的运行效率。性能分析通常关注以下几个方面：//1.执行时间：测量程序或程序中某部分的执行时间。//2.资源使用：分析CPU、内存、磁盘I/O和网络的使用情况。//3.响应时间：对于交互式应用，关注的是用户操作到系统响应的时间。}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.5}性能分析工具和方法包括：//1.性能分析器：专门的工具，可以监控程序运行时的资源使用情况和函数调用情况。//2.基准测试：通过运行标准化的测试用例来评估性能。//3.代码剖析：对代码进行静态或动态分析，找出可能的性能问题。}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}元编程的简单学习}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}元编程是指编写可以操作其他程序代码的程序的过程。它可以使代码更加灵活、可重用和动态。元编程的应用非常广泛，包括构建系统、依赖管理、测试和持续集成系统等领域。}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}大杂烩的学习}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.1}修改键位映射}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.2}什么是守护进程}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.3}备份}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.4}Markdown}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.5}Github}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}pytorch的学习}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.4.1}PyTorch是一个开源的机器学习库，由Facebook的人工智能研究团队开发，用于应用如计算机视觉和自然语言处理等领域的深度学习。PyTorch提供了两个主要功能：//1.强大的张量计算与GPU加速支持。//2.动态计算图，可以提供完全的灵活性和速度。}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}课堂练习}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.5.1}使用 Linux 上的 journalctl 或 macOS 上的 log show 命令来获取最近一天中超级用户的登录信息及其所执行的指令。如果找不到相关信息，您可以执行一些无害的命令，例如 sudo ls 然后再次查看。}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.5.2}学习这份pdb 实践教程并熟悉相关的命令。更深入的信息您可以参考这份教程。}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.5.3}我们经常会遇到的情况是某个我们希望去监听的端口已经被其他进程占用了。让我们通过进程的 PID 查找相应的进程。首先执行 python -m http.server 4444 启动一个最简单的 web 服务器来监听 4444 端口。在另外一个终端中，执行 lsof | grep LISTEN 打印出所有监听端口的进程及相应的端口。找到对应的 PID 然后使用 kill <PID> 停止该进程。}{8}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.5.4}curl ipinfo.io 命令或执行 HTTP 请求并获取关于您 IP 的信息。打开 Wireshark 并抓取 curl 发起的请求和收到的回复报文。（提示：可以使用http进行过滤，只显示 HTTP 报文） 这里我使用的是curl www.baidu.com，请求百度的首页并过滤了除 HTTP 之外的其他报文}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3}实验中遇到的问题与解决方法}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}不知道如何启动pbd}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}在安装Anaconda时，由于未勾选配置选项，导致Anaconda与电脑上原本已有的python环境产生冲突而安装失败}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}成功安装pytorch与cuda，再pycharm中进行pytorch运行环境的配置时，发现在Pycharm中进行python解释器的设置时，发现无法找到anaconda环境}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {4}实例练习}{10}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}使用打印调试法对python代码进行调试}{10}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}写一个简单加法程序，并使用pdb对程序进行调试}{10}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}写一个简单的除法程序，并使用第三方日志系统对其进行调试}{11}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}修改键位映射，将CapsLock与ctrl互换}{12}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}在终端中使用tar命令来进行文件的备份}{12}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.6}创建一个简单的应用程序接口（API）}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.7}在markdown中设置标题}{14}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.8}在markdown中使用*对字体进行处理}{14}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.9}在markdown中输出矩阵}{15}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.10}在markdown中输出任务括号}{15}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.11}在markdown中输出代码与代码块}{15}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.12}在markdown中插入超链接与图片}{15}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.13}简易的神经网络}{16}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.14}图像识别}{16}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.15}自然语言处理}{18}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.16}张量的基本操作}{20}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.17}张量的运算}{20}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.18}线性模型}{21}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.19}简单的全连接神经网络}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.20}自动微分}{24}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {5}实验收获与感悟}{24}{}\protected@file@percent }
\gdef \@abspage@last{24}
